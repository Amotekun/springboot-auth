#version: '3.8'
services:
  mysqldb:
    container_name: mysqldb
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    ports:
      - "3307:3306"
    volumes:
      - db_data:/var/lib/mysql # Optional: Persist database data
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u${MYSQL_DATASOURCE_USERNAME}", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 10s
      retries: 5

  spring-app:
    image: spring-app
    build: .
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_MAIL_HOST=${SPRING_MAIL_HOST}
      - SPRING_MAIL_PORT=${SPRING_MAIL_PORT}
      - SPRING_MAIL_USERNAME=${SPRING_MAIL_USERNAME}
      - SPRING_MAIL_PASSWORD=${SPRING_MAIL_PASSWORD}
      - SPRING_DATASOURCE_URL=${MYSQL_DOCKER_DATASOURCE_URL}
      - SPRING_DATASOURCE_USERNAME=${MYSQL_DATASOURCE_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - LOGGING_LEVEL_ROOT=INFO
      - LOGGING_FILE_NAME=/var/log/spring-boot-app.log
    env_file:
      - .env
    volumes:
      - ./src/main/resources/certs:/app/certs  # Mount certs directory to /app/certs in the container
    depends_on:
      mysqldb:
        condition: service_healthy

volumes:
  db_data:
